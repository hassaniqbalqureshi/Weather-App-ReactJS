{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\weather-forecast-react\\\\src\\\\Forecast.js\",\n    _s = $RefreshSig$();\n\nimport Axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./Forecast.css\";\nimport ForecastDay from \"./ForecastDay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Forecast(props) {\n  _s();\n\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function handleResponse(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Forecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: forecast.map(function (dailyForecast, index) {\n          if (index < 5) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: /*#__PURE__*/_jsxDEV(ForecastDay, {\n                data: dailyForecast\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this);\n          } else {\n            return null;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  } else {\n    let apiKey = \"aa9e93ab5b20be8afbcb86d1117a3d24\";\n    let longitude = props.coordinates.lon;\n    let latitude = props.coordinates.lat;\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\n    Axios.get(apiUrl).then(handleResponse);\n    return null;\n  }\n}\n\n_s(Forecast, \"kLNsBjMbwg/21mEy29QJZwMPCGo=\");\n\n_c = Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["D:/Projects/weather-forecast-react/src/Forecast.js"],"names":["Axios","React","useState","useEffect","ForecastDay","Forecast","props","loaded","setLoaded","forecast","setForecast","coordinates","handleResponse","response","data","daily","map","dailyForecast","index","apiKey","longitude","lon","latitude","lat","apiUrl","get","then"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,gBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACtC,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAI,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFQ,EAEN,CAACF,KAAK,CAACK,WAAP,CAFM,CAAT;;AAIA,WAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAEhCH,IAAAA,WAAW,CAACG,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAX;AACAP,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,MAAID,MAAJ,EAAY;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACGE,QAAQ,CAACO,GAAT,CAAa,UAAUC,aAAV,EAAyBC,KAAzB,EAAgC;AAC5C,cAAIA,KAAK,GAAG,CAAZ,EAAe;AACb,gCACE;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA,qCACE,QAAC,WAAD;AAAa,gBAAA,IAAI,EAAED;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF,eAA0BC,KAA1B;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD,WAND,MAMO;AACL,mBAAO,IAAP;AACD;AACF,SAVA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD,GAlBD,MAkBO;AACL,QAAIC,MAAM,GAAG,kCAAb;AACA,QAAIC,SAAS,GAAGd,KAAK,CAACK,WAAN,CAAkBU,GAAlC;AACA,QAAIC,QAAQ,GAAGhB,KAAK,CAACK,WAAN,CAAkBY,GAAjC;AACA,QAAIC,MAAM,GAAI,uDAAsDF,QAAS,QAAOF,SAAU,UAASD,MAAO,eAA9G;AAEAnB,IAAAA,KAAK,CAACyB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBd,cAAvB;AAEA,WAAO,IAAP;AACD;AACF;;GA1CuBP,Q;;KAAAA,Q","sourcesContent":["import Axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./Forecast.css\";\r\nimport ForecastDay from \"./ForecastDay\";\r\n\r\nexport default function Forecast(props) {\r\n  let [loaded, setLoaded] = useState(false);\r\n  let [forecast, setForecast] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setLoaded(false);\r\n  }, [props.coordinates]);\r\n\r\n  function handleResponse(response) {\r\n    \r\n    setForecast(response.data.daily);\r\n    setLoaded(true);\r\n  }\r\n\r\n  if (loaded) {\r\n    return (\r\n      <div className=\"Forecast\">\r\n        <div className=\"row\">\r\n          {forecast.map(function (dailyForecast, index) {\r\n            if (index < 5) {\r\n              return (\r\n                <div className=\"col\" key={index}>\r\n                  <ForecastDay data={dailyForecast} />\r\n                </div>\r\n              );\r\n            } else {\r\n              return null;\r\n            }\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    let apiKey = \"aa9e93ab5b20be8afbcb86d1117a3d24\";\r\n    let longitude = props.coordinates.lon;\r\n    let latitude = props.coordinates.lat;\r\n    let apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=metric`;\r\n\r\n    Axios.get(apiUrl).then(handleResponse);\r\n\r\n    return null;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}