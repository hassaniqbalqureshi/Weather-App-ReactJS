{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\w3-react\\\\react-weather-app\\\\src\\\\Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Forecast from \"./Forecast\";\nimport axios from \"axios\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport \"./Weather.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather(props) {\n  _s();\n\n  const [city, setCity] = useState(props.defaultCity);\n  const [weatherData, setWeatherData] = useState({\n    ready: false\n  });\n\n  function handleResponse(response) {\n    // console.log(response.data);\n    setWeatherData({\n      ready: true,\n      coordinates: response.data.coord,\n      city: response.data.name,\n      temperature: response.data.main.temp,\n      date: new Date(response.data.dt * 1000),\n      description: response.data.weather[0].description,\n      icon: response.data.weather[0].icon,\n      humidity: response.data.main.humidity,\n      wind: response.data.wind.speed,\n      pressure: response.data.main.pressure\n    });\n  }\n\n  function search() {\n    const apiKey = \"aa9e93ab5b20be8afbcb86d1117a3d24\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search(city);\n  }\n\n  function handleCityChange(event) {\n    setCity(event.target.value);\n  }\n\n  if (weatherData.ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"mb-3\",\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-9\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              hehhe: true,\n              type: \"search\",\n              className: \"form-control rounded-pill\",\n              autoComplete: \"off\",\n              onChange: handleCityChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              value: \"Search\",\n              className: \"btn btn-info rounded-pill\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WeatherInfo, {\n        data: weatherData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        coordinates: weatherData.coordinates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  } else {\n    search();\n    return \"Loading...\";\n  }\n}\n\n_s(Weather, \"fD9KFQzKk7+2HoON3k+ywG5+OGs=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["C:/Users/DELL/w3-react/react-weather-app/src/Weather.js"],"names":["React","useState","Forecast","axios","WeatherInfo","Weather","props","city","setCity","defaultCity","weatherData","setWeatherData","ready","handleResponse","response","coordinates","data","coord","name","temperature","main","temp","date","Date","dt","description","weather","icon","humidity","wind","speed","pressure","search","apiKey","apiUrl","get","then","handleSubmit","event","preventDefault","handleCityChange","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,eAAP;;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACrC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAACK,KAAK,CAACG,WAAP,CAAhC;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC;AAAEW,IAAAA,KAAK,EAAE;AAAT,GAAD,CAA9C;;AACA,WAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAChC;AACAH,IAAAA,cAAc,CAAC;AACbC,MAAAA,KAAK,EAAE,IADM;AAEbG,MAAAA,WAAW,EAAED,QAAQ,CAACE,IAAT,CAAcC,KAFd;AAGbV,MAAAA,IAAI,EAAEO,QAAQ,CAACE,IAAT,CAAcE,IAHP;AAIbC,MAAAA,WAAW,EAAEL,QAAQ,CAACE,IAAT,CAAcI,IAAd,CAAmBC,IAJnB;AAKbC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAST,QAAQ,CAACE,IAAT,CAAcQ,EAAd,GAAmB,IAA5B,CALO;AAMbC,MAAAA,WAAW,EAAEX,QAAQ,CAACE,IAAT,CAAcU,OAAd,CAAsB,CAAtB,EAAyBD,WANzB;AAObE,MAAAA,IAAI,EAAEb,QAAQ,CAACE,IAAT,CAAcU,OAAd,CAAsB,CAAtB,EAAyBC,IAPlB;AAQbC,MAAAA,QAAQ,EAAEd,QAAQ,CAACE,IAAT,CAAcI,IAAd,CAAmBQ,QARhB;AASbC,MAAAA,IAAI,EAAEf,QAAQ,CAACE,IAAT,CAAca,IAAd,CAAmBC,KATZ;AAUbC,MAAAA,QAAQ,EAAEjB,QAAQ,CAACE,IAAT,CAAcI,IAAd,CAAmBW;AAVhB,KAAD,CAAd;AAYD;;AAED,WAASC,MAAT,GAAkB;AAChB,UAAMC,MAAM,GAAG,kCAAf;AAEA,QAAIC,MAAM,GAAI,qDAAoD3B,IAAK,UAAS0B,MAAO,eAAvF;AACA9B,IAAAA,KAAK,CAACgC,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBvB,cAAvB;AACD;;AAED,WAASwB,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACAP,IAAAA,MAAM,CAACzB,IAAD,CAAN;AACD;;AAED,WAASiC,gBAAT,CAA0BF,KAA1B,EAAiC;AAC/B9B,IAAAA,OAAO,CAAC8B,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAP;AACD;;AAED,MAAIhC,WAAW,CAACE,KAAhB,EAAuB;AACrB,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,QAAQ,EAAEyB,YAAjC;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,mCACE;AACA,cAAA,KAAK,MADL;AAEE,cAAA,IAAI,EAAC,QAFP;AAIE,cAAA,SAAS,EAAC,2BAJZ;AAKE,cAAA,YAAY,EAAC,KALf;AAME,cAAA,QAAQ,EAAEG;AANZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,mCACE;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,KAAK,EAAC,QAFR;AAGE,cAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAsBE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAE9B;AAAnB;AAAA;AAAA;AAAA;AAAA,cAtBF,eAuBE,QAAC,QAAD;AAAU,QAAA,WAAW,EAAEA,WAAW,CAACK;AAAnC;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA2BD,GA5BD,MA4BO;AACLiB,IAAAA,MAAM;AACN,WAAO,YAAP;AACD;AACF;;GAnEuB3B,O;;KAAAA,O","sourcesContent":["import React, { useState } from \"react\";\r\nimport Forecast from \"./Forecast\";\r\nimport axios from \"axios\";\r\nimport WeatherInfo from \"./WeatherInfo\";\r\nimport \"./Weather.css\";\r\n\r\nexport default function Weather(props) {\r\n  const [city, setCity] = useState(props.defaultCity);\r\n  const [weatherData, setWeatherData] = useState({ ready: false });\r\n  function handleResponse(response) {\r\n    // console.log(response.data);\r\n    setWeatherData({\r\n      ready: true,\r\n      coordinates: response.data.coord,\r\n      city: response.data.name,\r\n      temperature: response.data.main.temp,\r\n      date: new Date(response.data.dt * 1000),\r\n      description: response.data.weather[0].description,\r\n      icon: response.data.weather[0].icon,\r\n      humidity: response.data.main.humidity,\r\n      wind: response.data.wind.speed,\r\n      pressure: response.data.main.pressure,\r\n    });\r\n  }\r\n\r\n  function search() {\r\n    const apiKey = \"aa9e93ab5b20be8afbcb86d1117a3d24\";\r\n\r\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\r\n    axios.get(apiUrl).then(handleResponse);\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    search(city);\r\n  }\r\n\r\n  function handleCityChange(event) {\r\n    setCity(event.target.value);\r\n  }\r\n\r\n  if (weatherData.ready) {\r\n    return (\r\n      <div className=\"Weather\">\r\n        <form className=\"mb-3\" onSubmit={handleSubmit}>\r\n          <div className=\"row\">\r\n            <div className=\"col-9\">\r\n              <input\r\n              hehhe\r\n                type=\"search\"\r\n              \r\n                className=\"form-control rounded-pill\"\r\n                autoComplete=\"off\"\r\n                onChange={handleCityChange}\r\n              />\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Search\"\r\n                className=\"btn btn-info rounded-pill\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <WeatherInfo data={weatherData} />\r\n        <Forecast coordinates={weatherData.coordinates} />\r\n      </div>\r\n    );\r\n  } else {\r\n    search();\r\n    return \"Loading...\";\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}